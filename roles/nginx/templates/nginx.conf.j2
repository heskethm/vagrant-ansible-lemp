# {{ ansible_managed }}

user {{ nginx_user }};
worker_processes {{ nginx_worker_processes }};
pid /var/run/nginx.pid;

events {
    worker_connections {{ nginx_worker_connections }};
    # multi_accept on;
}

http {

    ##
    # Basic Settings
    ##

    # Show / hide nginx version information.
    server_tokens {{ nginx_server_tokens }};

    # Define the MIME types for files.
    include       mime.types;
    default_type  application/octet-stream;

    # Update charset_types due to updated mime.types
    charset_types text/xml text/plain text/vnd.wap.wml application/x-javascript application/rss+xml text/css application/javascript application/json;

    # Speed up file transfers by using sendfile() to copy directly
    # between descriptors rather than using read()/write().
    sendfile {{ nginx_sendfile }};

    # Tell Nginx not to send out partial frames; this increases throughput
    # since TCP frames are filled up before being sent out. (adds TCP_CORK)
    tcp_nopush {{ nginx_tcp_nopush }};

    # How long to allow each connection to stay idle; longer values are better
    # for each individual client, particularly for SSL, but means that worker
    # connections are tied up longer. (Default: 65)
    keepalive_timeout {{ nginx_keepalive_timeout }};

    # Sets the maximum allowed size of the client request body, specified in the
    # “Content-Length” request header field.
    # Useful for file uploads
    client_max_body_size {{ nginx_client_max_body_size }};

    ##
    # Default Logging Settings
    ##

    access_log {{ nginx_access_log}};
    error_log {{ nginx_error_log }};

    ##
    # Set index
    ##
    index {{ nginx_index }};

    ##
    # Compression Settings
    ##

    # Enable Gzip compressed.
    gzip {{ nginx_gzip }};

    # Compression level (1-9).
    # 5 is a perfect compromise between size and cpu usage, offering about
    # 75% reduction for most ascii files (almost identical to level 9).
    gzip_comp_level {{ nginx_gzip_comp_level }};

    # Don't compress anything that's already small and unlikely to shrink much
    # if at all (the default is 20 bytes, which is bad as that usually leads to
    # larger files after gzipping).
    gzip_min_length {{ nginx_gzip_min_length }};

    # Compress data even for clients that are connecting to us via proxies,
    # identified by the "Via" header (required for CloudFront).
    gzip_proxied {{ nginx_gzip_proxied }};

    # Tell proxies to cache both the gzipped and regular version of a resource
    # whene1ver the client's Accept-Encoding capabilities header varies;
    # Avoids the issue where a non-gzip capable client (which is extremely rare
    # today) would display gibberish if their proxy gave them the gzipped version.
    gzip_vary {{ nginx_gzip_vary }};

    # Compress all output labeled with one of the following MIME-types.
    gzip_types {{ nginx_gzip_types }};

    ##
    # FastCGI caching setup
    ##

    fastcgi_cache_path /var/run/nginx-cache levels=1:2 keys_zone=CZONE:{{ fastcgicache_size }} inactive={{ fastcgicache_expires }};
    fastcgi_cache_key "$scheme$request_method$host$request_uri";
    fastcgi_cache_use_stale error timeout invalid_header http_500;
    fastcgi_ignore_headers Cache-Control Expires Set-Cookie;

    ##
    # Virtual Host Configs
    ##

    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*;
}
